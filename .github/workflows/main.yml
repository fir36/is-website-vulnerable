name: CI

on: [push, pull_request]

jobs:
  prisma-cloud-scan:
    runs-on: ubuntu-latest  # Uses the latest Ubuntu runner

    steps:
      - name: Checkout repo
        uses: actions/checkout@v2  # Checks out the repository code

      - name: Run Prisma Cloud
        id: prisma-cloud
        uses: bridgecrewio/checkov-action@master  # Uses the Checkov action to scan your code
        env:
          PRISMA_API_URL: https://api.sg.prismacloud.io  # Prisma Cloud API URL
        with:
          api-key: ${{ secrets.BC_API_KEY }}  # Uses the secret API key from GitHub secrets
  build:
    strategy:
      matrix:
        platform: [ubuntu-latest]
        node: ['10', '12', '14', '16', '18']
    name: Node ${{ matrix.node }} (${{ matrix.platform }})
    runs-on: ${{ matrix.platform }}
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node }}
      - name: install dependencies
        run: npm install --ignore-engines
      - name: install codecov
        run: npm install -g codecov
      - name: lint code
        run: npm run lint
      - name: run tests
        run: npm test
      - name: get code coverage report
        run: codecov
        env:
          CODECOV_TOKEN: ${{secrets.CODECOV_TOKEN}}

  release:
    name: do semantic release
    runs-on: 'ubuntu-latest'
    needs: build
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: '18'
      - name: install dependencies
        run: npm install --ignore-engines
      - name: prune devDeps from shrinkwrap file
        run: npx lockfile-prune npm-shrinkwrap.json
      - name: release
        run: npm run semantic-release
        env:
          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
          NPM_TOKEN: ${{secrets.NPM_TOKEN}}
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
